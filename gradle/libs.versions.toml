[versions]

compileSdkVersion = "33"
minSdkVersion = "26"
targetSdkVersion = "33"
versionCode = "1"
versionName = "1.0"

compose = "1.3.1"
hilt = "2.44.2"
gson = "2.10.1"
room = "2.5.0"
ktor = "2.2.2"
glide = "4.14.2"
material = "1.7.0"
paging = "3.1.1"
kotlin = "1.8.0"
fragment = "1.5.5"
retrofit = "2.9.0"
lifecycle = "2.5.1"
#coroutines = "1.6.4-native-mt"
coroutines = "1.6.4"
androidxCore = "1.9.0"
gradlePlugin = "7.4.0"
navigation = "2.5.3"
okHttp = "5.0.0-alpha.11"
glideWebDecoder = "2.3.4.14.2"
junit = "4.13.2"
mockito = "5.0.0"
robolectric = "4.9.2"
sqldelight = "2.0.0-alpha05"
koin = "3.3.2"
koinCompose = "3.4.2"
koinKtor = "3.3.1"
precompose = "1.3.14"
hyperdrive = "0.1.148"
molecule = "0.7.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "gradlePlugin" }
android-library = { id = "com.android.library", version.ref = "gradlePlugin" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compse-jb = { id = "org.jetbrains.compose", version = "1.3.0" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
google-service = { id = "com.google.gms.google-services", version = "4.3.15" }
sqldelight = { id = "app.cash.sqldelight", version = "2.0.0-alpha05" }
hyperdrive = { id = "org.brightify.hyperdrive", version.ref = "hyperdrive" }

[libraries]

google-material = { module = "com.google.android.material:material", version.ref = "material" }
google-gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
google-hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
google-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
google-hilt-test = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

javax-inject = { module = "javax.inject:javax.inject", version = "1" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

androidx-core = { module = "androidx.core:core-ktx", version = "1.9.0" }
androidx-compat = { module = "androidx.appcompat:appcompat", version = "1.6.0" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
androidx-paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }
androidx-paging-runtime = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
androidx-room = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

androidx-text-junit = { module = "androidx.test.ext:junit", version = "1.1.5" }
androidx-test-espresso = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }
androidx-test-espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version = "3.5.1" }
androidx-test-arch-core = { module = "androidx.arch.core:core-testing", version = "2.1.0" }
androidx-test-runner = { module = "androidx.test:runner", version = "1.5.2" }
androidx-test-rules = { module = "androidx.test:rules", version = "1.5.0" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version = "1.1.5" }
androidx-test-fragment = { module = "androidx.fragment:fragment-testing", version = "1.5.5" }

#Jectpact Compose
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version = "1.6.1" }

#Compose Multiplatform


squareup-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
squareup-retrofit-gson-converter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
squareup-retrofit-scalars-converter = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
squareup-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
squareup-okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

sqldelight-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koinKtor" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koinKtor" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-webdecoder = { module = "com.github.zjupure:webpdecoder", version.ref = "glideWebDecoder" }

junit = { module = "junit:junit", version.ref = "junit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito" }

precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
precompose-molecule = { module = "moe.tlaster:precompose-molecule", version.ref = "precompose" }

hyperdrive-api = { module = "org.brightify.hyperdrive:multiplatformx-api", version.ref = "hyperdrive" }
hyperdrive-compose = { module = "org.brightify.hyperdrive:multiplatformx-compose", version.ref = "hyperdrive" }

molecule = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }

napier = { module = "io.github.aakira:napier", version = "2.6.1" }

coil = { module = "io.coil-kt:coil", version = "2.2.2" }
coil-compose = { module = "io.coil-kt:coil-compose", version = "2.2.2" }

image-loader = { module = "io.github.qdsfdhvh:image-loader", version = "1.2.9" }

[bundles]
common = [
    "kotlin-coroutines",
    "ktor-core",
    "koin-core",
    "precompose",
    "precompose-molecule",
    "hyperdrive-api",
    "molecule",
    "napier"
]
compose-extentions = [
    "precompose",
    "hyperdrive-compose"
]
ktor = [
    "ktor-okhttp",
    "ktor-logging",
    "ktor-content-negotiation"
]
squareup = [
    "squareup-retrofit",
    "squareup-retrofit-gson-converter",
    "squareup-retrofit-scalars-converter",
    "squareup-okhttp",
    "squareup-okhttp-logging-interceptor"
]